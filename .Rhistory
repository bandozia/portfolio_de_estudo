v * n
v ** 2
v <- seq.int(from = 1, to = 5, by = 1)
v
vis <- v[1] + v[3]
vis
v_names <- c("um", "dois", "três", "quatro", "cinco")
names(v) <- v_names
v
v <- c(1,2,3,4,5)
v
v <- 1:5
v
seq(5) -> v
v
v * n
v ** 2
v <- seq.int(from = 1, to = 5, by = 1)
v
vis <- v[1] + v[3]
vis
v_names <- c("um", "dois", "três", "quatro", "cinco")
names(v) <- v_names
v
plot(v)
v <- c(1,2,3,4,5)
v
v <- 1:5
v
seq(5) -> v
v
v * n
v ** 2
v <- seq.int(from = 1, to = 5, by = 1)
v
vis <- v[1] + v[3]
vis
v_names <- c("um", "dois", "três", "quatro", "cinco")
names(v) <- v_names
v
n <- ((5 + 5) * 4) / 2
n
sqrt(n + 5) -> sq
sq
sq ^ 3
v <- c(1,2,3,4,5)
v
v <- 1:5
v
seq(5) -> v
v
v * n
v ** 2
v <- seq.int(from = 1, to = 5, by = 1)
v
vis <- v[1] + v[3]
vis
v_names <- c("um", "dois", "três", "quatro", "cinco")
names(v) <- v_names
v
n <- ((5 + 5) * 4) / 2
n
sqrt(n + 5) -> sq
sq
sq ^ 3
v <- c(1,2,3,4,5)
v
v <- 1:5
v
seq(5) -> v
v
v <- seq.int(from = 1, to = 5, by = 1)
v
v_names <- c("um", "dois", "três", "quatro", "cinco")
names(v) <- v_names
v
v * n
v ** 2
vis <- v[1] + v[3]
vis
n <- ((5 + 5) * 4) / 2
n
sqrt(n + 5) -> sq
sq
sq ^ 3
v <- c(1,2,3,4,5)
v
v <- 1:5
v
seq(5) -> v
v
v <- seq.int(from = 1, to = 5, by = 1)
v
v_names <- c("um", "dois", "três", "quatro", "cinco")
names(v) <- v_names
v
v * n
v
v ** 2
v
vis <- v[1] + v[3]
vis
v * n
v
print("aqui")
v ** 2
v
vis <- v[1] + v[3]
vis
v * n
v
v ** 2
v
vis <- v[1] + v[3]
vis
v * n
v ** 2
vis <- v[1] + v[3]
vis
vis <- v[1] + v[3]
vis
v2 <- c(2,2,2,2,2)
v +v2
v2 <- c(3,3,3)
v * v2
v[1:3]
v > 3
v[v<4]
v[v>3]
v > 3
m1 <- matrix(1:20, nrow = 4, ncol = 5)
m1
View(m1)
m1 * 2
m1
m1 * 5
m1 * v
v
m1 + v
m1 * v
n <- ((5 + 5) * 4) / 2
n
sqrt(n + 5) -> sq
sq
sq ^ 3
v <- c(1,2,3,4,5)
v
v <- 1:5
v
seq(5) -> v
v
v <- seq.int(from = 1, to = 5, by = 1)
v
v_names <- c("um", "dois", "três", "quatro", "cinco")
names(v) <- v_names
v
v * n
v ** 2
vis <- v[1] + v[3]
vis
v2 <- c(2,2,2,2,2)
v +v2
v2 <- c(3,3,3)
v * v2
v[1:3]
v > 3
v[v>3]
m1 <- matrix(1:20, nrow = 4, ncol = 5)
m1
m1 * 5
m1 * v
n <- ((5 + 5) * 4) / 2
n
sqrt(n + 5) -> sq
sq
sq ^ 3
v <- c(1,2,3,4,5)
v
v <- 1:5
v
seq(5) -> v
v
v <- seq.int(from = 1, to = 5, by = 1)
v
v_names <- c("um", "dois", "três", "quatro", "cinco")
names(v) <- v_names
v
v * n
v ** 2
vis <- v[1] + v[3]
vis
v2 <- c(2,2,2,2,2)
v +v2
v2 <- c(3,3,3)
v * v2
v[1:3]
v > 3
v[v>3]
m1 <- matrix(1:20, nrow = 4, ncol = 5)
m1
m1 * 5
m1 * v
library(swirl)
uninstall_course('Aprenda_R_no_R')
install_course_github('elthonf','Aprenda_R_no_R')
library(swirl)
swirl()
?sample
sample(1:6,4,replace = TRUE)
sample(1:6,4,replace = TRUE)
sample(1:20, 10)
letters
LETTERS
sample(LETTERS)
flips <- sample(c(0,1),100,replace = TRUE, prob = c(0.3,0.7))
flips
sum(flips == 1)
sum(flips)
?rbinom
rbinom(1,size = 100, prob = 0.7)
flips2 <- rbinom(c(0,1),size = 100, prob = c(0.3,0.7))
flips2 <- rbinom(n = 100, size = 1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10,100,25)
?rpois
rpois(5, 10)
my_pois <- replicate(100, rpois(5,10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
n <- ((5 + 5) * 4) / 2
n
sqrt(n + 5) -> sq
sq
sq ^ 3
v <- c(1,2,3,4,5)
v
v <- 1:5
v
seq(5) -> v
v
v <- seq.int(from = 1, to = 5, by = 1)
v
v_names <- c("um", "dois", "três", "quatro", "cinco")
names(v) <- v_names
v
v * n
v ** 2
vis <- v[1] + v[3]
vis
v2 <- c(2,2,2,2,2)
v +v2
v2 <- c(3,3,3)
v * v2
v[1:3]
v > 3
v[v>3]
m1 <- matrix(1:20, nrow = 4, ncol = 5)
m1
m1 * 5
m1 * v
random_vec <- sample(100, 10)
random_vec <- sample(10, 100)
random_vec <- sample(10, 100)
random_vec <- sample(100)
random_vec <- sample(100, 5)
random_vec <- sample(100)
sum(random_vec)
mtcars
sum(random_vec == 5)
sum(random_vec == 1)
sum(random_vec == 1)
sum(random_vec == 3)
sum(mtcars$gear == 4)
mtcars
mtcars$gear
sum(mtcars$gear == 4)
m2 <- matrix(1:20, nrow = 5, ncol = 4)
m1 * m2
m2 * m1
m1 %*% m2
m3 <- matrix(1:20, nrow = 5, ncol = 4)
m1 %*% m3
m2 <- matrix(5:30, nrow = 4, ncol = 5)
m2 <- matrix(5:35, nrow = 4, ncol = 5)
m2 <- matrix(5:40, nrow = 4, ncol = 5)
m2 <- matrix(5:50, nrow = 4, ncol = 5)
m2 <- matrix(5:55, nrow = 4, ncol = 5)
m2 <- matrix(2:25, nrow = 4, ncol = 5)
m2 <- matrix(2:30, nrow = 4, ncol = 5)
m2 <- matrix(10:200, nrow = 4, ncol = 5)
m2 <- matrix(1:20, nrow = 4, ncol = 5)
m1 * m2
m2 <- matrix(2:21, nrow = 4, ncol = 5)
m1 * m2
m2 <- matrix(5:25, nrow = 4, ncol = 5)
m2 <- matrix(5:26, nrow = 4, ncol = 5)
m2 <- matrix(3:23, nrow = 4, ncol = 5)
m2 <- matrix(3:24, nrow = 4, ncol = 5)
m2 <- matrix(1:0, nrow = 4, ncol = 5)
m1 * m2
m2 <- matrix(2:21, nrow = 4, ncol = 5)
m2 <- matrix(3:22, nrow = 4, ncol = 5)
m2 <- matrix(5:24, nrow = 4, ncol = 5)
m1 * m2
m2 <- matrix(20:40, nrow = 4, ncol = 5)
m2 <- matrix(20:41, nrow = 4, ncol = 5)
m2 <- matrix(20:39, nrow = 4, ncol = 5)
m1 * m2
m1 + m2
m1 * m2
m1 + m2
m3 <- matrix(1:20, nrow = 5, ncol = 4)
m1 %*% m3
m1 %+% m3
m1 %*% m3
n <- ((5 + 5) * 4) / 2
n
sqrt(n + 5) -> sq
sq
sq ^ 3
v <- c(1,2,3,4,5)
v
v <- 1:5
v
seq(5) -> v
v
v <- seq.int(from = 1, to = 5, by = 1)
v
v_names <- c("um", "dois", "três", "quatro", "cinco")
names(v) <- v_names
v
v * n
v ** 2
vis <- v[1] + v[3]
vis
v2 <- c(2,2,2,2,2)
v +v2
v2 <- c(3,3,3)
v * v2
v[1:3]
v > 3
v[v>3]
m1 <- matrix(1:20, nrow = 4, ncol = 5)
m1
m1 * 5
m1 * v
m2 <- matrix(20:39, nrow = 4, ncol = 5)
m1 * m2
m1 + m2
m3 <- matrix(1:20, nrow = 5, ncol = 4)
m1 %*% m3
random_vec <- sample(100)
sum(random_vec)
sum(mtcars$gear == 4)
random_vec
random_vec <- sample(20)
random_vec
sum(random_vec)
random_vec <- sample(30)
random_vec
sum(random_vec)
x <- c(89.497,90.764,92.112,92.142,90.384,90.647)
y <- c(177.054,185.519,190.920,190.586,184.339,189.155)
m <- lm(y ~ x)
summary(m)
View(m)
rand1 <- sample(200)
rand2 <- sample(200)
mr <- lm(rand1 ~ rand2)
summary(mr)
View(mr)
n <- ((5 + 5) * 4) / 2
n
sqrt(n + 5) -> sq
sq
sq ^ 3
v <- c(1,2,3,4,5)
v
v <- 1:5
v
seq(5) -> v
v
v <- seq.int(from = 1, to = 5, by = 1)
v
v_names <- c("um", "dois", "três", "quatro", "cinco")
names(v) <- v_names
v
v * n
v ** 2
vis <- v[1] + v[3]
vis
v2 <- c(2,2,2,2,2)
v +v2
v2 <- c(3,3,3)
v * v2
v[1:3]
v > 3
v[v>3]
m1 <- matrix(1:20, nrow = 4, ncol = 5)
m1
m1 * 5
m1 * v
m2 <- matrix(20:39, nrow = 4, ncol = 5)
m1 * m2
m1 + m2
m3 <- matrix(1:20, nrow = 5, ncol = 4)
m1 %*% m3
random_vec <- sample(30)
random_vec
sum(random_vec)
sum(mtcars$gear == 4)
vec_m <- c(2,4,6,8,10,12,14,16,18,20)
mean(vec_m)
median(vec_m)
vec_m <- c(2,4,6,8,10,12,14,16,18,20)
mean(vec_m)
median(vec_m)
vec_m <- c(1,2,3,4,5,6,7,8,9,10)
mean(vec_m)
median(vec_m)
vec_m <- c(1,2,3,4,5,6,7,8,9,10,11)
mean(vec_m)
median(vec_m)
vec_m <- c(1,2,3,4,5,6,7,8,9,10,30)
mean(vec_m)
median(vec_m)
sd(vec_m)
var(vec_m)
vec_var <- sample(20)
vec_var
sd(vec_var)
var(vec_var)
vec_var
vec_var <- sample(20)
vec_var
sd(vec_var)
vec_var <- sample(20)
vec_var
print("DESIVIO")
sd(vec_var)
vec_var <- sample(20)
vec_var
sd(vec_var)
library(swirl)
swirl()
Sys.Date()
mean(c(2,4,5))
submit()
boring_function("Minha primeira função!")
boring_function
submit()
my_mean(4,5,10)
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11,num = 5)
remainder(4, div=2)
args(remainder)
submit()
evaluate(sd,c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, c(8,4,0))
evaluate(function(x){x[length(x)]},c(8,4,0))
?paste
paste("Programar", "é", "divertido!")
submit()
telegram("Bla bla","bla","bleu")
submit()
submit()
submit()
View(mad_libs)
submit()
submit()
submit()
args <- list(...)
names(args) <- c("place","adjective","noun")
place <- args[["place"]]
adjective <- args[["adjective"]]
noun <- args[["noun"]]
mad_libs <- function(...){
args <- list(...)
names(args) <- c("place","adjective","noun")
place <- args[["place"]]
adjective <- args[["adjective"]]
noun <- args[["noun"]]
# Não altere nenhum código abaixo deste comentário
# Observe abaixo as variáveis que você precisará passar como
# parâmetro para que o código abaixo seja funcional!
paste("Novidades diretas do(a)", place, ". Hoje, cidadãos", adjective, "tomaram as ruas em protesto contra o novo", noun, "que foi instalado na cidade.")
}
args <- list(...)
place <- args[["place"]]
adjective <- args[["adjective"]]
noun <- args[["noun"]]
mad_libs <- function(...){
args <- list(...)
place <- args[["place"]]
adjective <- args[["adjective"]]
noun <- args[["noun"]]
# Não altere nenhum código abaixo deste comentário
# Observe abaixo as variáveis que você precisará passar como
# parâmetro para que o código abaixo seja funcional!
paste("Novidades diretas do(a)", place, ". Hoje, cidadãos", adjective, "tomaram as ruas em protesto contra o novo", noun, "que foi instalado na cidade.")
}
submit()
submit()
bye()
